import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as i,o as a,e as s}from"./app-DLoSqUOP.js";const n={},t=s(`<h2 id="《用户中心》" tabindex="-1"><a class="header-anchor" href="#《用户中心》"><span>《用户中心》</span></a></h2><p><a href="https://kazjsfecs3y.feishu.cn/wiki/QJDwwM5bbi2nT9k6laycWm4ynad" target="_blank" rel="noopener noreferrer">介绍文档</a></p><blockquote><p>SpringBoot打包Docker运行</p></blockquote><p>当开发完成一个 SpringBoot 项目后，企业开发一般会将它进行打包，然后部署上线。如果是分布式微服务系统，我们是用 docker 部署。</p><h2 id="首先" tabindex="-1"><a class="header-anchor" href="#首先"><span>首先</span></a></h2><p>确保你本地安装了 Docker，如果你还没有安装，可以从 Docker 官网下载并安装适合你操作系统的Docker版本。<code>https://www.docker.com/</code></p><p>推荐一个国内下载网站： <code>https://docker.github.net.cn</code></p><p>要想将服务打包成 docker 镜像，需要先写一个 Dockerfile。</p><blockquote><p>什么是 Dockerfile？</p><p>Dockerfile 是一个文本文件，用于定义 Docker 镜像的构建过程。它包含了一系列的指令和参数，这些指令告诉 Docker 引擎如何构建一个新的镜像。Dockerfile 中的指令被顺序执行，每一步都创建一个新的镜像层，最终生成一个完整的 Docker 镜像。</p><p>如果你不了解 Dockerfile，可以先找 JavaPub.net.cn 学一些基础知识就可以很快上手。</p></blockquote><h2 id="步骤" tabindex="-1"><a class="header-anchor" href="#步骤"><span>步骤</span></a></h2><h3 id="_1-创建dockerfile" tabindex="-1"><a class="header-anchor" href="#_1-创建dockerfile"><span>1. 创建Dockerfile</span></a></h3><p>在你的项目根目录下创建一个名为 Dockerfile 的文件，这个文件定义了Docker镜像的构建步骤。以下是一个典型的Dockerfile示例：</p><div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" data-title="xml" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"># 使用官方的 Java 21 基础镜像</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">FROM openjdk:21-jdk-alpine</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"># 设置工作目录</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">WORKDIR /app</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"># 复制JAR文件到工作目录</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">COPY target/user-center-backend-java-public-0.0.1-SNAPSHOT.jar /app/</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"># 暴露应用端口</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">EXPOSE 8080</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"># 启动命令</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">ENTRYPOINT [&quot;java&quot;, &quot;-jar&quot;, &quot;user-center-backend-java-public-0.0.1-SNAPSHOT.jar&quot;]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>请将 <code>user-center-backend-java-public-0.0.1-SNAPSHOT.jar</code> 替换为你的 JAR 包名称。</p><figure><img src="https://javapub-common-oss.oss-cn-beijing.aliyuncs.com/javapub/202412021641181.png" alt="image-20241202164145349" tabindex="0" loading="lazy"><figcaption>image-20241202164145349</figcaption></figure><h3 id="_2-构建docker镜像" tabindex="-1"><a class="header-anchor" href="#_2-构建docker镜像"><span>2. 构建Docker镜像</span></a></h3><p>在项目根目录下运行以下命令来构建Docker镜像：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> build</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> -t</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> user-center-backend-java-public:1.0</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> .</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>这个命令会读取当前目录下的Dockerfile，并构建一个名为 <code>user-center-backend-java-public</code> ，标签为 1.0 的 Docker 镜像。</p><blockquote><p>现在国内对 Docker 使用管控严格，如果你遇到问题可以先 javapub.net.cn</p></blockquote><p>原文地址：</p><p><a href="https://javapub.net.cn/star/project/user-center/" target="_blank" rel="noopener noreferrer">https://javapub.net.cn/star/project/user-center/</a></p>`,22),r=[t];function o(c,p){return a(),i("div",null,r)}const k=e(n,[["render",o],["__file","springboot_to_docker.html.vue"]]),h=JSON.parse('{"path":"/star/project/user-center/springboot_to_docker.html","title":"SpringBoot打包Docker运行","lang":"zh-CN","frontmatter":{"title":"SpringBoot打包Docker运行","icon":"line","category":["项目实战","《用户中心》"],"tag":["项目实战","用户管理系统","docker","springboot"],"description":"《用户中心》 介绍文档 SpringBoot打包Docker运行 当开发完成一个 SpringBoot 项目后，企业开发一般会将它进行打包，然后部署上线。如果是分布式微服务系统，我们是用 docker 部署。 首先 确保你本地安装了 Docker，如果你还没有安装，可以从 Docker 官网下载并安装适合你操作系统的Docker版本。https://w...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/star/project/user-center/springboot_to_docker.html"}],["meta",{"property":"og:site_name","content":"JavaPub"}],["meta",{"property":"og:title","content":"SpringBoot打包Docker运行"}],["meta",{"property":"og:description","content":"《用户中心》 介绍文档 SpringBoot打包Docker运行 当开发完成一个 SpringBoot 项目后，企业开发一般会将它进行打包，然后部署上线。如果是分布式微服务系统，我们是用 docker 部署。 首先 确保你本地安装了 Docker，如果你还没有安装，可以从 Docker 官网下载并安装适合你操作系统的Docker版本。https://w..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://javapub-common-oss.oss-cn-beijing.aliyuncs.com/javapub/202412021641181.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-12-02T08:46:44.000Z"}],["meta",{"property":"article:author","content":"Mr.Wang"}],["meta",{"property":"article:tag","content":"项目实战"}],["meta",{"property":"article:tag","content":"用户管理系统"}],["meta",{"property":"article:tag","content":"docker"}],["meta",{"property":"article:tag","content":"springboot"}],["meta",{"property":"article:modified_time","content":"2024-12-02T08:46:44.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"SpringBoot打包Docker运行\\",\\"image\\":[\\"https://javapub-common-oss.oss-cn-beijing.aliyuncs.com/javapub/202412021641181.png\\"],\\"dateModified\\":\\"2024-12-02T08:46:44.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Wang\\",\\"url\\":\\"https://javapub.net.cn\\"}]}"]]},"headers":[{"level":2,"title":"《用户中心》","slug":"《用户中心》","link":"#《用户中心》","children":[]},{"level":2,"title":"首先","slug":"首先","link":"#首先","children":[]},{"level":2,"title":"步骤","slug":"步骤","link":"#步骤","children":[{"level":3,"title":"1. 创建Dockerfile","slug":"_1-创建dockerfile","link":"#_1-创建dockerfile","children":[]},{"level":3,"title":"2. 构建Docker镜像","slug":"_2-构建docker镜像","link":"#_2-构建docker镜像","children":[]}]}],"git":{"createdTime":1733129204000,"updatedTime":1733129204000,"contributors":[{"name":"wangshiyu","email":"iswangshiyu@foxmail.com","commits":1}]},"readingTime":{"minutes":1.77,"words":531},"filePathRelative":"star/project/user-center/springboot_to_docker.md","localizedDate":"2024年12月2日","excerpt":"<h2>《用户中心》</h2>\\n<p><a href=\\"https://kazjsfecs3y.feishu.cn/wiki/QJDwwM5bbi2nT9k6laycWm4ynad\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">介绍文档</a></p>\\n<blockquote>\\n<p>SpringBoot打包Docker运行</p>\\n</blockquote>\\n<p>当开发完成一个 SpringBoot 项目后，企业开发一般会将它进行打包，然后部署上线。如果是分布式微服务系统，我们是用 docker 部署。</p>\\n<h2>首先</h2>\\n<p>确保你本地安装了 Docker，如果你还没有安装，可以从 Docker 官网下载并安装适合你操作系统的Docker版本。<code>https://www.docker.com/</code></p>","autoDesc":true}');export{k as comp,h as data};
