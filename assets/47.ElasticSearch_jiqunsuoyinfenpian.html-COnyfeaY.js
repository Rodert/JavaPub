import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as h,a as s,b as n,w as t,d as i,e as l,r as p,o as r}from"./app-6XiLruVp.js";const k={},d=s("h1",{id:"elasticsearch集群架构、索引和分片",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#elasticsearch集群架构、索引和分片"},[s("span",null,"ElasticSearch集群架构、索引和分片")])],-1),c=s("p",null,[s("strong",null,[i("我是 javapub，一名 "),s("code",null,"Markdown"),i(" 程序员从👨‍💻，八股文种子选手。")])],-1),o=l(`<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;"> Shard</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">    private</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;"> String</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> shardId</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">    private</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;"> List</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#E5C07B;">Document</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> documents</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">    public</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> Shard</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">String</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> shardId</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;">        this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">shardId</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> shardId;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;">        this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">documents</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> new</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;"> ArrayList</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&lt;&gt;();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> addDocument</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">Document</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> document</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">        documents</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">add</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(document);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">    public</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;"> List</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#E5C07B;">Document</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> search</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">String</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> keyword</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">        List</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#E5C07B;">Document</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt; </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">results</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> new</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;"> ArrayList</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&lt;&gt;();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">        for</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">Document</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> document</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> :</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> documents) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">            if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">document</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">contains</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(keyword)) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">                results</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">add</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(document);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">            }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">        }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">        return</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> results;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这段代码模拟了一个分片的实现。我们可以看到，每个分片都有一个唯一的shardId，以及一个存储文档的列表。当我们添加文档时，它会被存储在对应的分片中。而当我们搜索关键字时，它会遍历分片中的文档，找到匹配的结果并返回。</p>`,2),g=l('<figure><img src="https://ghproxy.com/https://raw.githubusercontent.com/Rodert/javapub_oss/main/other/47.jpg?raw=true" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>最近我在更新《面试1v1》系列文章，主要以场景化的方式，讲解我们在面试中遇到的问题，致力于让每一位工程师拿到自己心仪的offer，感兴趣可以关注<strong>公众号JavaPub</strong>追更！</p><figure><img src="https://javapub-common-oss.oss-cn-beijing.aliyuncs.com/javapub/2024%2F06%2F06%2F20240606-225632.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>🎁目录合集：</p><p>Gitee：<code>https://gitee.com/rodert/JavaPub</code></p><p>GitHub：<code>https://github.com/Rodert/JavaPub</code></p><p><a href="http://javapub.net.cn" target="_blank" rel="noopener noreferrer">http://javapub.net.cn</a></p>',7);function u(B,y){const a=p("font");return r(),h("div",null,[d,c,s("p",null,[s("strong",null,[n(a,{color:"blue"},{default:t(()=>[i("面试官")]),_:1}),i("： 嗨，欢迎来到我们的面试！今天我们将聊一聊ElasticSearch集群架构、索引和分片。你对这些有了解吗？")])]),s("p",null,[s("strong",null,[n(a,{color:"red"},{default:t(()=>[i("候选人：")]),_:1})]),i(" 当然！ElasticSearch就像是一群小伙伴组成的团队，一起合作来处理海量数据。索引就像是我们的图书馆，每本书都有一个唯一的编号，方便我们快速找到需要的信息。而分片就像是把一本大书分成多个小册子，每个人负责一部分，这样我们可以并行处理数据。")]),s("p",null,[s("strong",null,[n(a,{color:"blue"},{default:t(()=>[i("面试官")]),_:1}),i("： 很形象的比喻！那么，ElasticSearch集群是如何工作的呢？")])]),s("p",null,[s("strong",null,[n(a,{color:"red"},{default:t(()=>[i("候选人：")]),_:1})]),i(" 嗯，ElasticSearch集群就像是一个大家庭，由多个节点组成。每个节点都有自己的角色，有的是主节点，有的是数据节点。主节点负责协调整个集群的工作，而数据节点则负责存储和处理数据。")]),s("p",null,[s("strong",null,[n(a,{color:"blue"},{default:t(()=>[i("面试官")]),_:1}),i("： 很好！那么，索引是如何创建和管理的呢？")])]),s("p",null,[s("strong",null,[n(a,{color:"red"},{default:t(()=>[i("候选人：")]),_:1})]),i(' 好问题！创建索引就像是在图书馆里开辟一个新的区域，我们可以给它起个名字，比如"books"。然后，我们可以定义这个索引的字段，比如书名、作者、出版日期等。这样，我们就可以根据这些字段来搜索和过滤数据了。')]),s("p",null,[s("strong",null,[n(a,{color:"blue"},{default:t(()=>[i("面试官")]),_:1}),i("： 非常清楚！那么，分片是如何工作的呢？")])]),s("p",null,[s("strong",null,[n(a,{color:"red"},{default:t(()=>[i("候选人：")]),_:1})]),i(" 嗯，分片就像是把一本大书分成多个小册子，每个分片都是一个独立的存储单元。当我们往索引中添加数据时，ElasticSearch会根据一定的规则将数据均匀地分配到不同的分片上。这样，我们可以并行处理数据，提高性能和可扩展性。")]),s("p",null,[s("strong",null,[n(a,{color:"blue"},{default:t(()=>[i("面试官")]),_:1}),i("： 很棒！你对ElasticSearch集群架构、索引和分片的解释非常清晰。有没有什么源码方面的知识可以分享一下？")])]),s("p",null,[s("strong",null,[n(a,{color:"red"},{default:t(()=>[i("候选人：")]),_:1})]),i(" 当然！让我给你展示一段简单的源码，来说明一下分片的工作原理：")]),o,s("p",null,[s("strong",null,[n(a,{color:"blue"},{default:t(()=>[i("面试官")]),_:1}),i("： 太棒了！你不仅解释得很清楚，还给出了源码示例。这对于刚入行的技术人员来说非常有帮助。谢谢你的分享！")])]),g])}const v=e(k,[["render",u],["__file","47.ElasticSearch_jiqunsuoyinfenpian.html.vue"]]),b=JSON.parse('{"path":"/posts/special/1v1/47.ElasticSearch_jiqunsuoyinfenpian.html","title":"Elasticsearch集群索引分片","lang":"zh-CN","frontmatter":{"title":"Elasticsearch集群索引分片","icon":"laptop-code","category":["《面试1v1》"],"description":"ElasticSearch集群架构、索引和分片 我是 javapub，一名 Markdown 程序员从👨‍💻，八股文种子选手。 ： 嗨，欢迎来到我们的面试！今天我们将聊一聊ElasticSearch集群架构、索引和分片。你对这些有了解吗？ 当然！ElasticSearch就像是一群小伙伴组成的团队，一起合作来处理海量数据。索引就像是我们的图书馆，每...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/posts/special/1v1/47.ElasticSearch_jiqunsuoyinfenpian.html"}],["meta",{"property":"og:site_name","content":"JavaPub"}],["meta",{"property":"og:title","content":"Elasticsearch集群索引分片"}],["meta",{"property":"og:description","content":"ElasticSearch集群架构、索引和分片 我是 javapub，一名 Markdown 程序员从👨‍💻，八股文种子选手。 ： 嗨，欢迎来到我们的面试！今天我们将聊一聊ElasticSearch集群架构、索引和分片。你对这些有了解吗？ 当然！ElasticSearch就像是一群小伙伴组成的团队，一起合作来处理海量数据。索引就像是我们的图书馆，每..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://ghproxy.com/https://raw.githubusercontent.com/Rodert/javapub_oss/main/other/47.jpg?raw=true"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-07-03T14:35:52.000Z"}],["meta",{"property":"article:author","content":"Mr.Wang"}],["meta",{"property":"article:modified_time","content":"2024-07-03T14:35:52.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Elasticsearch集群索引分片\\",\\"image\\":[\\"https://ghproxy.com/https://raw.githubusercontent.com/Rodert/javapub_oss/main/other/47.jpg?raw=true\\",\\"https://javapub-common-oss.oss-cn-beijing.aliyuncs.com/javapub/2024%2F06%2F06%2F20240606-225632.png\\"],\\"dateModified\\":\\"2024-07-03T14:35:52.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Wang\\",\\"url\\":\\"https://javapub.net.cn\\"}]}"]]},"headers":[],"git":{"createdTime":1717568495000,"updatedTime":1720017352000,"contributors":[{"name":"wangshiyu","email":"iswangshiyu@foxmail.com","commits":1}]},"readingTime":{"minutes":2.99,"words":896},"filePathRelative":"posts/special/1v1/47.ElasticSearch_jiqunsuoyinfenpian.md","localizedDate":"2024年6月5日","excerpt":"\\n<p><strong>我是 javapub，一名 <code>Markdown</code> 程序员从👨‍💻，八股文种子选手。</strong></p>\\n<p><strong>： 嗨，欢迎来到我们的面试！今天我们将聊一聊ElasticSearch集群架构、索引和分片。你对这些有了解吗？</strong></p>\\n<p><strong></strong> 当然！ElasticSearch就像是一群小伙伴组成的团队，一起合作来处理海量数据。索引就像是我们的图书馆，每本书都有一个唯一的编号，方便我们快速找到需要的信息。而分片就像是把一本大书分成多个小册子，每个人负责一部分，这样我们可以并行处理数据。</p>","autoDesc":true}');export{v as comp,b as data};
