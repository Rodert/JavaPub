import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as s,o as a,e as n}from"./app-BRsMgNiy.js";const e={},t=n(`<h1 id="docker-打包-springboot-项目快速入门" tabindex="-1"><a class="header-anchor" href="#docker-打包-springboot-项目快速入门"><span>docker 打包 springboot 项目快速入门</span></a></h1><p><code>文末源码</code></p><p>[toc]</p><h1 id="_1-构建sringboot工程" tabindex="-1"><a class="header-anchor" href="#_1-构建sringboot工程"><span>1.构建Sringboot工程</span></a></h1><h3 id="新建项目" tabindex="-1"><a class="header-anchor" href="#新建项目"><span>新建项目</span></a></h3><p><img src="https://javapub-common-oss.oss-cn-beijing.aliyuncs.com/javapub/202406211711275.png" alt="在这里插入图片描述" loading="lazy"><img src="https://javapub-common-oss.oss-cn-beijing.aliyuncs.com/javapub/202406211711640.png" alt="在这里插入图片描述" loading="lazy"><img src="https://javapub-common-oss.oss-cn-beijing.aliyuncs.com/javapub/202406211711350.png" alt="在这里插入图片描述" loading="lazy"><img src="https://javapub-common-oss.oss-cn-beijing.aliyuncs.com/javapub/202406211711983.png" alt="在这里插入图片描述" loading="lazy"></p><h3 id="创建接口" tabindex="-1"><a class="header-anchor" href="#创建接口"><span>创建接口</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">package</span><span style="--shiki-light:#24292E;--shiki-dark:#C678DD;"> com.wangshiyu.javapub.demo.springbootdocker.controller</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;"> org.springframework.web.bind.annotation.RequestMapping</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;"> org.springframework.web.bind.annotation.RequestParam</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;"> org.springframework.web.bind.annotation.RestController</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> * @Author: JavaPub</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> * @License: https://github.com/Rodert/ https://gitee.com/rodert/</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> * @Contact: https://javapub.blog.csdn.net/</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> * @Date: 2022/2/26 12:24</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> * @Version: 1.0</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> * @Description:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> */</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">@</span><span style="--shiki-light:#D73A49;--shiki-dark:#E5C07B;">RestController</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;"> HelloController</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">    @</span><span style="--shiki-light:#D73A49;--shiki-dark:#E5C07B;">RequestMapping</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;/hello&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">    String</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> hello</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(@</span><span style="--shiki-light:#D73A49;--shiki-dark:#E5C07B;">RequestParam</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">required</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> false</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">defaultValue</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> &quot;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">String</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> name</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">        return</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> &quot;hello, welcome wangshiyu JavaPub &quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> name;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="maven-打包-springboot-项目" tabindex="-1"><a class="header-anchor" href="#maven-打包-springboot-项目"><span>maven 打包 springboot 项目</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">mvn</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> clean</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> package</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> -DskipTests</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h1 id="_2-编写dockerfile" tabindex="-1"><a class="header-anchor" href="#_2-编写dockerfile"><span>2.编写Dockerfile</span></a></h1><p>Dockerfile讲解</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">#基础镜像通过java8来的</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">FROM</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> java:8</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">#将当前文件中所有*.jar  拷贝到项目的app.jar中（这个app.jar是自己生成的）</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">COPY</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;"> *</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">.jar</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> /app.jar</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">#映射地址</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">CMD</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;--server.prot=8080&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">#暴露端口</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">EXPOSE</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 8080</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">#执行命令java  -jar</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">ENTRYPOINT</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;java&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;-jar&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;/app.jar&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="_3-docker环境搭建和构建docker镜像运行" tabindex="-1"><a class="header-anchor" href="#_3-docker环境搭建和构建docker镜像运行"><span>3.docker环境搭建和构建docker镜像运行</span></a></h1><h3 id="文件准备" tabindex="-1"><a class="header-anchor" href="#文件准备"><span>文件准备</span></a></h3><p>拷贝 *.jar 包和 Dockerfile 到linux服务器文件夹下</p><h3 id="linux下docker安装" tabindex="-1"><a class="header-anchor" href="#linux下docker安装"><span>linux下docker安装</span></a></h3><p>本次在root权限下安装</p><ol><li>更新yum到最新版本</li></ol><blockquote><p>yum update</p></blockquote><ol start="2"><li>卸载旧版本（如果没安装，忽略）</li></ol><blockquote><p>yum remove docker <br> docker-client <br> docker-client-latest <br> docker-common <br> docker-latest <br> docker-latest-logrotate <br> docker-logrotate <br> docker-selinux <br> docker-engine-selinux <br> docker-engine</p></blockquote><blockquote><p>yum list installed | grep docker</p></blockquote><blockquote><p>yum remove docker-ce</p></blockquote><blockquote><p>rm -rf /var/lib/docker</p></blockquote><p>curl -sSL https://get.daocloud.io/docker | sh</p><ol start="2"><li>安装一些工具</li></ol><blockquote><p>yum install -y yum-utils device-mapper-persistent-data lvm2</p></blockquote><blockquote><p>yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo</p></blockquote><ol start="3"><li>安装docker稳定版</li></ol><blockquote><p>yum install docker-ce</p></blockquote><ol start="4"><li>成功</li></ol><blockquote><p>docker version</p></blockquote><ol start="5"><li>切换国内加速镜像</li></ol><blockquote><p>vim /etc/docker/daemon.json</p></blockquote><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">  &quot;registry-mirrors&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> [</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">    &quot;https://dockerhub.azk8s.cn&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">    &quot;https://docker.mirrors.ustc.edu.cn&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">    &quot;https://registry.docker-cn.com&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>systemctl daemon-reload</p></blockquote><blockquote><p>systemctl restart docker</p></blockquote><h4 id="异常" tabindex="-1"><a class="header-anchor" href="#异常"><span>异常</span></a></h4><p>如果中途出现什么旧版本没卸载干净，把卸载命令全部重新执行一遍。</p><h3 id="打包构建docker镜像" tabindex="-1"><a class="header-anchor" href="#打包构建docker镜像"><span>打包构建docker镜像</span></a></h3><ol><li>将 jar包 打包成 docker 镜像（基于Dockerfile打包一个名为 idea_docker_image_test 的镜像，版本为1.0）</li></ol><blockquote><p>docker build -t idea_docker_image_test:1.0 -f Dockerfile .</p></blockquote><ol start="2"><li>查看镜像是否打包成功</li></ol><blockquote><p>docker images</p></blockquote><h3 id="运行" tabindex="-1"><a class="header-anchor" href="#运行"><span>运行</span></a></h3><blockquote><p>docker run -d --name idea_docker_image_test -p 8080:8080 idea_docker_image_test:1.0</p></blockquote><figure><img src="https://javapub-common-oss.oss-cn-beijing.aliyuncs.com/javapub/202406211712800.png" alt="在这里插入图片描述" tabindex="0" loading="lazy"><figcaption>在这里插入图片描述</figcaption></figure><h3 id="查看日志" tabindex="-1"><a class="header-anchor" href="#查看日志"><span>查看日志</span></a></h3><ol><li>查看控制台日志</li></ol><blockquote><p>docker logs -f --tail=100 容器id</p></blockquote><ol start="2"><li>查看slf4j日志</li></ol><blockquote><p>通过 docker exec -it 容器id /bin/bash 进入容器 再通过项目里指定的路径及可找到日志文件</p></blockquote><p>源码： https://github.com/Rodert/SpringBoot-javapub/tree/main/spring-boot-docker</p>`,54),l=[t];function o(r,p){return a(),s("div",null,l)}const c=i(e,[["render",o],["__file","springboot_docker_start.html.vue"]]),d=JSON.parse('{"path":"/posts/java/springboot/springboot_docker_start.html","title":"SpringBoot2.x整合Prometheus+Grafana【附源码】","lang":"zh-CN","frontmatter":{"title":"SpringBoot2.x整合Prometheus+Grafana【附源码】","icon":"lightbulb","category":["springboot","prometheus","grafana","java"],"tag":["springboot","prometheus","grafana","java"],"description":"docker 打包 springboot 项目快速入门 文末源码 [toc] 1.构建Sringboot工程 新建项目 在这里插入图片描述 在这里插入图片描述 在这里插入图片描述 在这里插入图片描述 创建接口 maven 打包 springboot 项目 2.编写Dockerfile Dockerfile讲解 3.docker环境搭建和构建docker...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/posts/java/springboot/springboot_docker_start.html"}],["meta",{"property":"og:site_name","content":"JavaPub"}],["meta",{"property":"og:title","content":"SpringBoot2.x整合Prometheus+Grafana【附源码】"}],["meta",{"property":"og:description","content":"docker 打包 springboot 项目快速入门 文末源码 [toc] 1.构建Sringboot工程 新建项目 在这里插入图片描述 在这里插入图片描述 在这里插入图片描述 在这里插入图片描述 创建接口 maven 打包 springboot 项目 2.编写Dockerfile Dockerfile讲解 3.docker环境搭建和构建docker..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://javapub-common-oss.oss-cn-beijing.aliyuncs.com/javapub/202406211711275.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-07-06T13:42:36.000Z"}],["meta",{"property":"article:author","content":"Mr.Wang"}],["meta",{"property":"article:tag","content":"springboot"}],["meta",{"property":"article:tag","content":"prometheus"}],["meta",{"property":"article:tag","content":"grafana"}],["meta",{"property":"article:tag","content":"java"}],["meta",{"property":"article:modified_time","content":"2024-07-06T13:42:36.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"SpringBoot2.x整合Prometheus+Grafana【附源码】\\",\\"image\\":[\\"https://javapub-common-oss.oss-cn-beijing.aliyuncs.com/javapub/202406211711275.png\\",\\"https://javapub-common-oss.oss-cn-beijing.aliyuncs.com/javapub/202406211711640.png\\",\\"https://javapub-common-oss.oss-cn-beijing.aliyuncs.com/javapub/202406211711350.png\\",\\"https://javapub-common-oss.oss-cn-beijing.aliyuncs.com/javapub/202406211711983.png\\",\\"https://javapub-common-oss.oss-cn-beijing.aliyuncs.com/javapub/202406211712800.png\\"],\\"dateModified\\":\\"2024-07-06T13:42:36.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Wang\\",\\"url\\":\\"https://javapub.net.cn\\"}]}"]]},"headers":[{"level":3,"title":"新建项目","slug":"新建项目","link":"#新建项目","children":[]},{"level":3,"title":"创建接口","slug":"创建接口","link":"#创建接口","children":[]},{"level":3,"title":"maven 打包 springboot 项目","slug":"maven-打包-springboot-项目","link":"#maven-打包-springboot-项目","children":[]},{"level":3,"title":"文件准备","slug":"文件准备","link":"#文件准备","children":[]},{"level":3,"title":"linux下docker安装","slug":"linux下docker安装","link":"#linux下docker安装","children":[]},{"level":3,"title":"打包构建docker镜像","slug":"打包构建docker镜像","link":"#打包构建docker镜像","children":[]},{"level":3,"title":"运行","slug":"运行","link":"#运行","children":[]},{"level":3,"title":"查看日志","slug":"查看日志","link":"#查看日志","children":[]}],"git":{"createdTime":1718965796000,"updatedTime":1720273356000,"contributors":[{"name":"wangshiyu","email":"iswangshiyu@foxmail.com","commits":2}]},"readingTime":{"minutes":1.99,"words":598},"filePathRelative":"posts/java/springboot/springboot_docker_start.md","localizedDate":"2024年6月21日","excerpt":"\\n<p><code>文末源码</code></p>\\n<p>[toc]</p>\\n<h1>1.构建Sringboot工程</h1>\\n<h3>新建项目</h3>\\n<p><img src=\\"https://javapub-common-oss.oss-cn-beijing.aliyuncs.com/javapub/202406211711275.png\\" alt=\\"在这里插入图片描述\\" loading=\\"lazy\\">\\n<img src=\\"https://javapub-common-oss.oss-cn-beijing.aliyuncs.com/javapub/202406211711640.png\\" alt=\\"在这里插入图片描述\\" loading=\\"lazy\\">\\n<img src=\\"https://javapub-common-oss.oss-cn-beijing.aliyuncs.com/javapub/202406211711350.png\\" alt=\\"在这里插入图片描述\\" loading=\\"lazy\\">\\n<img src=\\"https://javapub-common-oss.oss-cn-beijing.aliyuncs.com/javapub/202406211711983.png\\" alt=\\"在这里插入图片描述\\" loading=\\"lazy\\"></p>","autoDesc":true}');export{c as comp,d as data};
