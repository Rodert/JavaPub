import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as s,o as a,e as t}from"./app-S-H21Y3x.js";const e={},n=t(`<h1 id="命令集合" tabindex="-1"><a class="header-anchor" href="#命令集合"><span>命令集合</span></a></h1><h2 id="awk" tabindex="-1"><a class="header-anchor" href="#awk"><span>awk</span></a></h2><h2 id="常用命令大全" tabindex="-1"><a class="header-anchor" href="#常用命令大全"><span>常用命令大全</span></a></h2><blockquote><p>工作中最常用shell指令</p></blockquote><ol><li><p>ps aux | grep &quot;tomcat&quot; 查找运行的进程</p></li><li><p>find / -name java* 全部查找（java*）文件</p></li><li><p>cat -n name-file | grep &quot;java&quot; 查找文件（java）所在行</p></li><li><p>cat -n name-file | tail -n +92 | head -n 20 查看文件92行前后20行</p></li><li><p>:set nu 显示行号</p></li><li><p>:n 跳转到指定行号</p></li></ol><p>7，tail -n 20 filename 显示后20行数据</p><p>8,sudo -u bsafe bash 切换basfe帐户</p><p>9，cat textJson_20190216.log | awk -F &#39;\\t&#39; &#39;{print $NF}&#39; &gt; result.log 去除文件中字符&quot;\\t&quot; 方法二：#awk -F &quot;\\t&quot; &#39;{print $2}&#39; ./textJson_20190215.log &gt;result.log</p><p>10，cat file1 file2 | sort | uniq &gt; fileAll 取出文件的并集（去重）</p><p>11，远程复制拷贝 $scp local_file remote_username@remote_ip:remote_folder $scp local_file remote_username@remote_ip:remote_file $scp local_file remote_ip:remote_folder $scp local_file remote_ip:remote_file scp root@192.168.120.204:/opt/soft/nginx-0.5.38.tar.gz /opt/soft/</p><p>12，字符串切割 <code>awk &#39;{FS=&quot;:&quot;}{print $1&quot;\\t&quot; $3}&#39; /etc/passwd</code>，使用FS=””,指定分割符，第一行已经读完，用冒号分割已经来不及了，默认的用空格分割，后面的用冒号分割，在FS之前强制加个BEGIN *<strong><strong><strong><strong><strong>awk -F &#39;\\t&#39; &#39;{print $3}&#39;</strong></strong></strong></strong></strong></p><p>13，删除指定行 <code>sed -i &#39;1d&#39; &lt;file&gt;</code></p><p>14，删除包含特定字符的行 <code>sed -e &#39;/xxx/d&#39; a1.txt &gt; a2.txt</code></p><p>15，文件授权（递归授权所有文件） <code>chown -R testname &lt;filename&gt;</code></p><p>16，压缩</p><p>压缩方式：</p><p><code>tar -zcvf archive_name.tar.gz filename</code></p><p>解压缩方式：</p><p><code>tar -zxvf archive_name.tar.gz</code></p><p>压缩解压（zip）</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">zip</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> -r</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> 123.zip</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> 123.txt</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">unzip</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> 123.zip</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> -d</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> ./</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>17，nohup</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">nohup</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> java</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> -jar</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> myProject.jar</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;"> &gt;&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> /usr/local/log/output.log</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;"> 2&gt;&amp;1</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> &amp;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>19，替换文件制定字符</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">sed</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> -i</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> &quot;s/tf_ab/tf_qw/g&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> result.txt</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>20，git命令</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">    git</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> status</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">	git</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> .</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">	git</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> commit</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> &quot;一些信息&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">	git</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> push</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> 仓库地址</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">	###分支</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">	git</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> checkout</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> -b</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> 分支名</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> #新建分支</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">	git</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> branch</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> -a</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">	git</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> checkout</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> 分支名</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>21，<code>rsync -av ../log/textJson_$min&quot;.log&quot; --port=9215 root@106.12.31.72::web_news_database</code></p>`,28),l=[n];function p(h,r){return a(),s("div",null,l)}const k=i(e,[["render",p],["__file","shell_command_basic_2.html.vue"]]),c=JSON.parse('{"path":"/posts/linux/shell_command_basic_2.html","title":"大学生都会的Linux命令V2","lang":"zh-CN","frontmatter":{"title":"大学生都会的Linux命令V2","icon":"lightbulb","description":"命令集合 awk 常用命令大全 工作中最常用shell指令 ps aux | grep \\"tomcat\\" 查找运行的进程 find / -name java* 全部查找（java*）文件 cat -n name-file | grep \\"java\\" 查找文件（java）所在行 cat -n name-file | tail -n +92 | head ...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/posts/linux/shell_command_basic_2.html"}],["meta",{"property":"og:site_name","content":"JavaPub"}],["meta",{"property":"og:title","content":"大学生都会的Linux命令V2"}],["meta",{"property":"og:description","content":"命令集合 awk 常用命令大全 工作中最常用shell指令 ps aux | grep \\"tomcat\\" 查找运行的进程 find / -name java* 全部查找（java*）文件 cat -n name-file | grep \\"java\\" 查找文件（java）所在行 cat -n name-file | tail -n +92 | head ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-07-03T14:35:52.000Z"}],["meta",{"property":"article:author","content":"Mr.Wang"}],["meta",{"property":"article:modified_time","content":"2024-07-03T14:35:52.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"大学生都会的Linux命令V2\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-07-03T14:35:52.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Wang\\",\\"url\\":\\"https://javapub.net.cn\\"}]}"]]},"headers":[{"level":2,"title":"awk","slug":"awk","link":"#awk","children":[]},{"level":2,"title":"常用命令大全","slug":"常用命令大全","link":"#常用命令大全","children":[]}],"git":{"createdTime":1718350679000,"updatedTime":1720017352000,"contributors":[{"name":"wangshiyu","email":"iswangshiyu@foxmail.com","commits":1}]},"readingTime":{"minutes":1.41,"words":424},"filePathRelative":"posts/linux/shell_command_basic_2.md","localizedDate":"2024年6月14日","excerpt":"\\n<h2>awk</h2>\\n<h2>常用命令大全</h2>\\n<blockquote>\\n<p>工作中最常用shell指令</p>\\n</blockquote>\\n<ol>\\n<li>\\n<p>ps aux | grep \\"tomcat\\"\\t\\t\\t查找运行的进程</p>\\n</li>\\n<li>\\n<p>find / -name java*\\t\\t\\t\\t全部查找（java*）文件</p>\\n</li>\\n<li>\\n<p>cat -n name-file | grep \\"java\\"\\t\\t查找文件（java）所在行</p>\\n</li>\\n<li>\\n<p>cat -n name-file | tail -n +92 | head -n 20\\t\\t查看文件92行前后20行</p>\\n</li>\\n<li>\\n<p>:set nu 显示行号</p>\\n</li>\\n<li>\\n<p>:n  跳转到指定行号</p>\\n</li>\\n</ol>","autoDesc":true}');export{k as comp,c as data};
