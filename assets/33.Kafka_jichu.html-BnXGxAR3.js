import{_ as r}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as l,a,b as o,w as n,d as t,e as p,r as c,o as s}from"./app-B_nkx2Hv.js";const u={},i=a("p",null,[a("strong",null,[t("我是 javapub，一名 "),a("code",null,"Markdown"),t(" 程序员从👨‍💻，八股文种子选手。")])],-1),f=a("code",null,"kafka-core",-1),d=p('<figure><img src="https://ghproxy.com/https://raw.githubusercontent.com/Rodert/javapub_oss/main/other/33.jpg?raw=true" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>最近我在更新《面试1v1》系列文章，主要以场景化的方式，讲解我们在面试中遇到的问题，致力于让每一位工程师拿到自己心仪的offer，感兴趣可以关注<strong>公众号JavaPub</strong>追更！</p><figure><img src="https://javapub-common-oss.oss-cn-beijing.aliyuncs.com/javapub/2024%2F06%2F06%2F20240606-225632.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>🎁目录合集：</p><p>Gitee：<code>https://gitee.com/rodert/JavaPub</code></p><p>GitHub：<code>https://github.com/Rodert/JavaPub</code></p><p><a href="http://javapub.net.cn" target="_blank" rel="noopener noreferrer">http://javapub.net.cn</a></p>',7);function g(m,h){const e=c("font");return s(),l("div",null,[i,a("p",null,[a("strong",null,[o(e,{color:"blue"},{default:n(()=>[t("面试官")]),_:1}),t("： 嗨，欢迎来到我们的面试！今天我们要聊一聊Kafka基础。你对Kafka有了解吗？")])]),a("p",null,[a("strong",null,[o(e,{color:"red"},{default:n(()=>[t("候选人：")]),_:1})]),t(" 嗨！当然有啦，Kafka是一个分布式流处理平台，用于高吞吐量、低延迟的数据传输和处理。它就像是一个强壮的邮递员，可靠地将消息递送给不同的系统。")]),a("p",null,[a("strong",null,[o(e,{color:"blue"},{default:n(()=>[t("面试官")]),_:1}),t("： 很好！那你能给我解释一下Kafka的消息发布和订阅模型吗？")])]),a("p",null,[a("strong",null,[o(e,{color:"red"},{default:n(()=>[t("候选人：")]),_:1})]),t(" 没问题！Kafka的消息发布和订阅模型就像是一个咖啡馆。你可以把消息当作咖啡订单，生产者就像是顾客下单，把订单放在柜台上。而消费者就像是咖啡师，从柜台上拿走订单，制作咖啡并提供给顾客。")]),a("p",null,[a("strong",null,[o(e,{color:"blue"},{default:n(()=>[t("面试官")]),_:1}),t("： 哈哈，这个比喻很形象！那Kafka是如何保证消息的可靠性传输的呢？")])]),a("p",null,[a("strong",null,[o(e,{color:"red"},{default:n(()=>[t("候选人：")]),_:1})]),t(" 嗯，这就涉及到Kafka的副本机制了。Kafka通过将消息分为多个分区，并在多个Broker上创建副本来实现可靠性。就像是你有一个备份咖啡师，如果一个咖啡师不在，备份咖啡师可以接手制作咖啡，确保订单不会丢失。")]),a("p",null,[a("strong",null,[o(e,{color:"blue"},{default:n(()=>[t("面试官")]),_:1}),t("： 很好！那如果我想要查看Kafka的源码，你能给我一些指导吗？")])]),a("p",null,[a("strong",null,[o(e,{color:"red"},{default:n(()=>[t("候选人：")]),_:1})]),t(" 当然！Kafka的源码是开源的，你可以在官方的GitHub仓库上找到。如果你想深入了解Kafka的工作原理，我建议你从"),f,t("模块开始阅读源码。你可以找到各种有用的注释和解释，帮助你理解Kafka的内部机制。")]),a("p",null,[a("strong",null,[o(e,{color:"blue"},{default:n(()=>[t("面试官")]),_:1}),t("： 太棒了！你对Kafka的理解很透彻。最后一个问题，Kafka有哪些常见的使用场景呢？")])]),a("p",null,[a("strong",null,[o(e,{color:"red"},{default:n(()=>[t("候选人：")]),_:1})]),t(" Kafka的使用场景非常广泛！它可以用于日志收集、实时流处理、事件驱动架构等。比如，你可以使用Kafka来构建一个实时的数据管道，将数据从一个系统传输到另一个系统，或者用于构建实时分析和监控系统。")]),a("p",null,[a("strong",null,[o(e,{color:"blue"},{default:n(()=>[t("面试官")]),_:1}),t("： 太棒了！你对Kafka的了解非常全面。谢谢你的时间和分享！")])]),a("p",null,[a("strong",null,[o(e,{color:"red"},{default:n(()=>[t("候选人：")]),_:1})]),t(" 谢谢你的提问，我很享受这次面试！如果还有其他问题，随时告诉我。")]),d])}const K=r(u,[["render",g],["__file","33.Kafka_jichu.html.vue"]]),b=JSON.parse('{"path":"/posts/special/1v1/33.Kafka_jichu.html","title":"Kafka基础","lang":"zh-CN","frontmatter":{"title":"Kafka基础","icon":"laptop-code","category":["《面试1v1》"],"description":"我是 javapub，一名 Markdown 程序员从👨‍💻，八股文种子选手。 ： 嗨，欢迎来到我们的面试！今天我们要聊一聊Kafka基础。你对Kafka有了解吗？ 嗨！当然有啦，Kafka是一个分布式流处理平台，用于高吞吐量、低延迟的数据传输和处理。它就像是一个强壮的邮递员，可靠地将消息递送给不同的系统。 ： 很好！那你能给我解释一下Kafka的...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/posts/special/1v1/33.Kafka_jichu.html"}],["meta",{"property":"og:site_name","content":"JavaPub"}],["meta",{"property":"og:title","content":"Kafka基础"}],["meta",{"property":"og:description","content":"我是 javapub，一名 Markdown 程序员从👨‍💻，八股文种子选手。 ： 嗨，欢迎来到我们的面试！今天我们要聊一聊Kafka基础。你对Kafka有了解吗？ 嗨！当然有啦，Kafka是一个分布式流处理平台，用于高吞吐量、低延迟的数据传输和处理。它就像是一个强壮的邮递员，可靠地将消息递送给不同的系统。 ： 很好！那你能给我解释一下Kafka的..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://ghproxy.com/https://raw.githubusercontent.com/Rodert/javapub_oss/main/other/33.jpg?raw=true"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-07-03T14:35:52.000Z"}],["meta",{"property":"article:author","content":"Mr.Wang"}],["meta",{"property":"article:modified_time","content":"2024-07-03T14:35:52.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Kafka基础\\",\\"image\\":[\\"https://ghproxy.com/https://raw.githubusercontent.com/Rodert/javapub_oss/main/other/33.jpg?raw=true\\",\\"https://javapub-common-oss.oss-cn-beijing.aliyuncs.com/javapub/2024%2F06%2F06%2F20240606-225632.png\\"],\\"dateModified\\":\\"2024-07-03T14:35:52.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Wang\\",\\"url\\":\\"https://javapub.net.cn\\"}]}"]]},"headers":[],"git":{"createdTime":1717568495000,"updatedTime":1720017352000,"contributors":[{"name":"wangshiyu","email":"iswangshiyu@foxmail.com","commits":1}]},"readingTime":{"minutes":2.56,"words":767},"filePathRelative":"posts/special/1v1/33.Kafka_jichu.md","localizedDate":"2024年6月5日","excerpt":"<p><strong>我是 javapub，一名 <code>Markdown</code> 程序员从👨‍💻，八股文种子选手。</strong></p>\\n<p><strong>： 嗨，欢迎来到我们的面试！今天我们要聊一聊Kafka基础。你对Kafka有了解吗？</strong></p>\\n<p><strong></strong> 嗨！当然有啦，Kafka是一个分布式流处理平台，用于高吞吐量、低延迟的数据传输和处理。它就像是一个强壮的邮递员，可靠地将消息递送给不同的系统。</p>\\n<p><strong>： 很好！那你能给我解释一下Kafka的消息发布和订阅模型吗？</strong></p>\\n<p><strong></strong> 没问题！Kafka的消息发布和订阅模型就像是一个咖啡馆。你可以把消息当作咖啡订单，生产者就像是顾客下单，把订单放在柜台上。而消费者就像是咖啡师，从柜台上拿走订单，制作咖啡并提供给顾客。</p>","autoDesc":true}');export{K as comp,b as data};
