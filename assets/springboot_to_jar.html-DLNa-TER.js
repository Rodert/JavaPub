import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as s,o as a,e as n}from"./app-k4_JlnG1.js";const e={},t=n(`<h2 id="《用户中心》" tabindex="-1"><a class="header-anchor" href="#《用户中心》"><span>《用户中心》</span></a></h2><p><a href="https://kazjsfecs3y.feishu.cn/wiki/QJDwwM5bbi2nT9k6laycWm4ynad" target="_blank" rel="noopener noreferrer">介绍文档</a></p><blockquote><p>SpringBoot打包Jar</p></blockquote><p>当开发完成一个 SpringBoot 项目后，企业开发一般会将它进行打包，然后部署上线。</p><h2 id="首先" tabindex="-1"><a class="header-anchor" href="#首先"><span>首先</span></a></h2><p>这里有一个可以暴露 HTTP 服务的 SpringBoot 程序。开发 SpringBoot 服务，我们一般使用 Maven 或 Gradle 来管理项目，这里我以最常用的 Maven 来演示，也是《用户中心》中用到的管理方式方式。</p><blockquote><p>Maven 和 Gradle 是两个流行的自动化构建工具，它们主要用于Java项目，但也支持其他语言的项目。它们的主要作用是自动化项目的构建过程，包括编译、测试、打包、部署等任务。</p></blockquote><figure><img src="https://javapub-common-oss.oss-cn-beijing.aliyuncs.com/javapub/202411271459402.png" alt="image-20241127145854380" tabindex="0" loading="lazy"><figcaption>image-20241127145854380</figcaption></figure><h2 id="步骤" tabindex="-1"><a class="header-anchor" href="#步骤"><span>步骤</span></a></h2><h3 id="_1-spring-boot-maven-插件" tabindex="-1"><a class="header-anchor" href="#_1-spring-boot-maven-插件"><span>1. Spring Boot Maven 插件</span></a></h3><p>给 SpringBoot 安装 Maven 插件。</p><p>Spring Boot 提供了一个 Maven 插件，可以自动配置应用为一个可执行的 JAR 文件。你需要在你的 pom.xml 文件中包含这个插件：</p><div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" data-title="xml" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">build</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">plugins</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">plugin</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">            &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">groupId</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;org.springframework.boot&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">groupId</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">            &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">artifactId</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;spring-boot-maven-plugin&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">artifactId</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">        &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">plugin</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">    &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">plugins</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">build</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果你是使用 IDEA 一键创建的 SpringBoot 初始化项目，那么它是包含这个插件的，到 <code>pom.xml</code> 中查看。</p><h3 id="_2-打包命令" tabindex="-1"><a class="header-anchor" href="#_2-打包命令"><span>2. 打包命令</span></a></h3><p>使用 Maven 打包命令来构建你的应用：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">mvn</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> clean</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> package</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>这个命令会创建一个包含所有依赖项的 JAR 文件，通常位于 <code>target/</code> 目录下。</p><figure><img src="https://javapub-common-oss.oss-cn-beijing.aliyuncs.com/javapub/202412021543084.png" alt="image-20241202154315050" tabindex="0" loading="lazy"><figcaption>image-20241202154315050</figcaption></figure><figure><img src="https://javapub-common-oss.oss-cn-beijing.aliyuncs.com/javapub/202412021543879.png" alt="image-20241202154337542" tabindex="0" loading="lazy"><figcaption>image-20241202154337542</figcaption></figure><figure><img src="https://javapub-common-oss.oss-cn-beijing.aliyuncs.com/javapub/202412021545038.png" alt="image-20241202154524878" tabindex="0" loading="lazy"><figcaption>image-20241202154524878</figcaption></figure><h3 id="_3-可执行-jar" tabindex="-1"><a class="header-anchor" href="#_3-可执行-jar"><span>3. 可执行 JAR：</span></a></h3><p>生成的 JAR 文件是一个可执行的 JAR，这意味着你可以通过以下命令运行它：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">java</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> -jar</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> target/yourapp.jar</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>其中 <code>yourapp.jar</code> 是你的 JAR 文件名。</p><figure><img src="https://javapub-common-oss.oss-cn-beijing.aliyuncs.com/javapub/202412021602911.png" alt="测试启动jar" tabindex="0" loading="lazy"><figcaption>测试启动jar</figcaption></figure><p><code>user-center-backend-java-public-0.0.1-SNAPSHOT.jar</code> 是我用《用户中心》项目测试的 Jar。</p><h3 id="_4-其他配置" tabindex="-1"><a class="header-anchor" href="#_4-其他配置"><span>4. 其他配置</span></a></h3><p>如果你需要额外的配置，比如指定 JAR 的名称或者包含额外的资源，你可以在 <code>pom.xml</code> 中配置 Maven 插件：</p><div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" data-title="xml" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">plugin</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">groupId</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;org.springframework.boot&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">groupId</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">artifactId</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;spring-boot-maven-plugin&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">artifactId</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">configuration</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">finalName</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;usercenter-app-javapub&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">finalName</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">        &lt;!-- 其他配置 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">    &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">configuration</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">plugin</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://javapub-common-oss.oss-cn-beijing.aliyuncs.com/javapub/202412021608001.png" alt="image-20241202160812016" tabindex="0" loading="lazy"><figcaption>image-20241202160812016</figcaption></figure><p>✅通过这些步骤，你可以将 Spring Boot 应用打包为一个 JAR 文件，方便部署和运行。比如放到服务器运行。</p><p>原文地址：</p><p><a href="https://javapub.net.cn/star/project/user-center/" target="_blank" rel="noopener noreferrer">https://javapub.net.cn/star/project/user-center/</a></p>`,34),l=[t];function p(r,h){return a(),s("div",null,l)}const c=i(e,[["render",p],["__file","springboot_to_jar.html.vue"]]),d=JSON.parse('{"path":"/star/project/user-center/springboot_to_jar.html","title":"SpringBoot打包Jar","lang":"zh-CN","frontmatter":{"title":"SpringBoot打包Jar","icon":"line","category":["项目实战","《用户中心》"],"tag":["项目实战","用户管理系统","jar","springboot"],"description":"《用户中心》 介绍文档 SpringBoot打包Jar 当开发完成一个 SpringBoot 项目后，企业开发一般会将它进行打包，然后部署上线。 首先 这里有一个可以暴露 HTTP 服务的 SpringBoot 程序。开发 SpringBoot 服务，我们一般使用 Maven 或 Gradle 来管理项目，这里我以最常用的 Maven 来演示，也是《用...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/JavaPub/star/project/user-center/springboot_to_jar.html"}],["meta",{"property":"og:site_name","content":"JavaPub"}],["meta",{"property":"og:title","content":"SpringBoot打包Jar"}],["meta",{"property":"og:description","content":"《用户中心》 介绍文档 SpringBoot打包Jar 当开发完成一个 SpringBoot 项目后，企业开发一般会将它进行打包，然后部署上线。 首先 这里有一个可以暴露 HTTP 服务的 SpringBoot 程序。开发 SpringBoot 服务，我们一般使用 Maven 或 Gradle 来管理项目，这里我以最常用的 Maven 来演示，也是《用..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://javapub-common-oss.oss-cn-beijing.aliyuncs.com/javapub/202411271459402.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-12-02T08:09:58.000Z"}],["meta",{"property":"article:author","content":"Mr.Wang"}],["meta",{"property":"article:tag","content":"项目实战"}],["meta",{"property":"article:tag","content":"用户管理系统"}],["meta",{"property":"article:tag","content":"jar"}],["meta",{"property":"article:tag","content":"springboot"}],["meta",{"property":"article:modified_time","content":"2024-12-02T08:09:58.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"SpringBoot打包Jar\\",\\"image\\":[\\"https://javapub-common-oss.oss-cn-beijing.aliyuncs.com/javapub/202411271459402.png\\",\\"https://javapub-common-oss.oss-cn-beijing.aliyuncs.com/javapub/202412021543084.png\\",\\"https://javapub-common-oss.oss-cn-beijing.aliyuncs.com/javapub/202412021543879.png\\",\\"https://javapub-common-oss.oss-cn-beijing.aliyuncs.com/javapub/202412021545038.png\\",\\"https://javapub-common-oss.oss-cn-beijing.aliyuncs.com/javapub/202412021602911.png\\",\\"https://javapub-common-oss.oss-cn-beijing.aliyuncs.com/javapub/202412021608001.png\\"],\\"dateModified\\":\\"2024-12-02T08:09:58.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Wang\\",\\"url\\":\\"https://javapub.net.cn\\"}]}"]]},"headers":[{"level":2,"title":"《用户中心》","slug":"《用户中心》","link":"#《用户中心》","children":[]},{"level":2,"title":"首先","slug":"首先","link":"#首先","children":[]},{"level":2,"title":"步骤","slug":"步骤","link":"#步骤","children":[{"level":3,"title":"1. Spring Boot Maven 插件","slug":"_1-spring-boot-maven-插件","link":"#_1-spring-boot-maven-插件","children":[]},{"level":3,"title":"2. 打包命令","slug":"_2-打包命令","link":"#_2-打包命令","children":[]},{"level":3,"title":"3. 可执行 JAR：","slug":"_3-可执行-jar","link":"#_3-可执行-jar","children":[]},{"level":3,"title":"4. 其他配置","slug":"_4-其他配置","link":"#_4-其他配置","children":[]}]}],"git":{"createdTime":1732690799000,"updatedTime":1733126998000,"contributors":[{"name":"wangshiyu","email":"iswangshiyu@foxmail.com","commits":2}]},"readingTime":{"minutes":2,"words":599},"filePathRelative":"star/project/user-center/springboot_to_jar.md","localizedDate":"2024年11月27日","excerpt":"<h2>《用户中心》</h2>\\n<p><a href=\\"https://kazjsfecs3y.feishu.cn/wiki/QJDwwM5bbi2nT9k6laycWm4ynad\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">介绍文档</a></p>\\n<blockquote>\\n<p>SpringBoot打包Jar</p>\\n</blockquote>\\n<p>当开发完成一个 SpringBoot 项目后，企业开发一般会将它进行打包，然后部署上线。</p>\\n<h2>首先</h2>\\n<p>这里有一个可以暴露 HTTP 服务的 SpringBoot 程序。开发 SpringBoot 服务，我们一般使用 Maven 或 Gradle 来管理项目，这里我以最常用的 Maven 来演示，也是《用户中心》中用到的管理方式方式。</p>","autoDesc":true}');export{c as comp,d as data};
