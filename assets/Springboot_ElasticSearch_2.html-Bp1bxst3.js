import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as e,o as s,e as i}from"./app-LVpYnduy.js";const n={},t=i(`<p>本教程是系列教程，对于初学者可以对 ES 有一个整体认识和实践实战。</p><p>还没开始的同学，建议先读一下系列攻略目录：<a href="https://mp.weixin.qq.com/s/nSWEIfbpRf-4txJqRz60gQ" target="_blank" rel="noopener noreferrer">Springboot2.x整合ElasticSearch7.x实战目录</a></p><p>本篇幅是继上一篇 <a href="https://mp.weixin.qq.com/s/4azw3QycpqrprABNdo44Zg" target="_blank" rel="noopener noreferrer">Springboot2.x整合ElasticSearch7.x实战（一）</a> ，适合初学 Elasticsearch 的小白，可以跟着整个教程做一个练习。</p><h1 id="第三章-分词器安装" tabindex="-1"><a class="header-anchor" href="#第三章-分词器安装"><span>第三章 分词器安装</span></a></h1><p>使用搜索，少不了使用分词器，elasticsearch 自带了一些简单分词器，也可以使用第三方分词器插件，如 ik、pinyin 等。</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>Standard Analyzer - 默认分词器，按词切分，小写处理</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Simple Analyzer - 按照非字母切分(符号被过滤), 小写处理</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Stop Analyzer - 小写处理，停用词过滤(the,a,is)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Whitespace Analyzer - 按照空格切分，不转小写</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Keyword Analyzer - 不分词，直接将输入当作输出</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Patter Analyzer - 正则表达式，默认\\W+(非字符分割)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Language - 提供了30多种常见语言的分词器</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Customer Analyzer 自定义分词器</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="ik分词器插件安装" tabindex="-1"><a class="header-anchor" href="#ik分词器插件安装"><span>ik分词器插件安装</span></a></h2><ol><li>下载和elasticsearch版本一致</li></ol><p>教程使用的是 <code>7.7.0</code> 版本。</p><ol start="2"><li>准备 ik 目录，</li></ol><blockquote><p>cd plugins &amp;&amp; mkdir ik</p></blockquote><ol start="3"><li>下载</li></ol><blockquote><p>wget https://github.com/medcl/elasticsearch-analysis-ik/releases/tag/v7.7.0/elasticsearch-analysis-ik-7.7.0.zip 有些地方从github下载网络不好，我在课件里有插件压缩包。</p></blockquote><ol start="4"><li>解压到对应ik目录</li></ol><p>解压文件到目录 <code>elasticsearch-7.7.0/plugins/ik</code> 下。</p><ol start="5"><li>重启es，查看是否安装成功</li></ol><blockquote><p>curl http://localhost:9200/_cat/plugins</p></blockquote><p>rest 实例：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="拼音分词器插件安装" tabindex="-1"><a class="header-anchor" href="#拼音分词器插件安装"><span>拼音分词器插件安装</span></a></h2><ol><li>下载和elasticsearch版本一致</li></ol><p>教程使用的是 <code>7.7.0</code> 版本。</p><ol start="2"><li>准备 ik 目录，</li></ol><blockquote><p>cd plugins &amp;&amp; mkdir pinyin</p></blockquote><ol start="3"><li>下载</li></ol><blockquote><p>wget https://github.com/medcl/elasticsearch-analysis-pinyin/archive/v7.7.0.zip 有些地方从github下载网络不好，我在课件放了插件的压缩包。</p></blockquote><ol start="4"><li>解压到对应pinyin目录</li></ol><p>解压文件到目录 <code>elasticsearch-7.7.0/plugins/pinyin</code> 下。</p><ol start="5"><li>重启es，查看是否安装成功</li></ol><blockquote><p>curl http://localhost:9200/_cat/plugins</p></blockquote><figure><img src="https://javapub-common-oss.oss-cn-beijing.aliyuncs.com/javapub/2024%2F06%2F15%2F20240615-091134.png" alt="安装目录截图" tabindex="0" loading="lazy"><figcaption>安装目录截图</figcaption></figure><h2 id="更多扩展词库" tabindex="-1"><a class="header-anchor" href="#更多扩展词库"><span>更多扩展词库</span></a></h2><ul><li>同义词词库</li></ul><blockquote><p>https://github.com/ginobefun/elasticsearch-dynamic-synonym/releases</p></blockquote><p>有些情况会使用我们自己的分词服务，后面代码中会讲解使用方式。</p><h1 id="第四章-elasticsearch核心概念" tabindex="-1"><a class="header-anchor" href="#第四章-elasticsearch核心概念"><span>第四章 Elasticsearch核心概念</span></a></h1><h2 id="elasticsearch核心概念-相关术语解析" tabindex="-1"><a class="header-anchor" href="#elasticsearch核心概念-相关术语解析"><span>Elasticsearch核心概念-相关术语解析</span></a></h2><h3 id="cluster" tabindex="-1"><a class="header-anchor" href="#cluster"><span>Cluster</span></a></h3><p>Elasticsearch 集群，由一台或多台的Elasticsearch 节点(Node)组成。</p><h3 id="node" tabindex="-1"><a class="header-anchor" href="#node"><span>Node</span></a></h3><p>Elasticsearch 节点，可以认为是Elasticsearch的服务进程，在同一台机器上启动两个Elasticsearch实例(进程)，就是两个node节点。</p><h3 id="index" tabindex="-1"><a class="header-anchor" href="#index"><span>Index</span></a></h3><p>索引，具有相同结构的文档的集合，类似于关系型数据库的数据库实例（6.0.0版本type废弃后，索引的概念下降到等同于数据库表的级别）。一个集群中可以有多个索引。</p><h3 id="type" tabindex="-1"><a class="header-anchor" href="#type"><span>Type</span></a></h3><p>类型，在索引中内进行逻辑细分，在新版的Elasticsearch中已经废弃。</p><blockquote><p>关于 type 废弃问题，如果你需要维护低版本 elasticsearch（在7.0.0、6.*、5.6版本变化较大），一定要阅读这篇官方英文文档 https://www.elastic.co/guide/en/elasticsearch/reference/current/removal-of-types.html</p></blockquote><h3 id="document" tabindex="-1"><a class="header-anchor" href="#document"><span>Document</span></a></h3><p>文档，Elasticsearch中的最小的数据存储单元，JSON数据格式，很多相同结构的文档组成索引。文档类似于关系型数据库中表内的一行记录。</p><p>举个例子，一篇新闻的文档数据。</p><div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" data-title="xml" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">news document</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">	&quot;id&quot;:&quot;1&quot;,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">	&quot;title&quot;:&quot;China is a great country&quot;,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">	&quot;content&quot;:&quot;I love China.&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="shard" tabindex="-1"><a class="header-anchor" href="#shard"><span>Shard</span></a></h3><p>分片，单个索引切分成多个shard，分布在多台Node节点上存储。可以利用shard很好的横向扩展，以存储更多的数据，同时shard分布在多台node上，可以提升集群整体的吞吐量和性能。在创建索引的时候可以直接指定分片的数量即可，一旦指定就不能再修改了。</p><h3 id="replica" tabindex="-1"><a class="header-anchor" href="#replica"><span>Replica</span></a></h3><p>索引副本，完全拷贝shard的内容，一个shard可以有一个或者多个replica，replica就是shard的数据拷贝，以提高冗余。</p><p>replica承担三个任务：</p><ol><li>shard故障或者node宕机时，其中的一个replica可以升级成shard</li><li>replica保证数据不丢失，保证高可用</li><li>replica可以分担搜索请求，提高集群的吞吐和性能</li></ol><p>shard 的全称叫 primary shard，replica 全称叫 replica shard，primary shard 数量在创建索引时指定，后期不能修改，replica shard 后期可以修改。默认每个索引的 primary shard 值为5，replica shard 值为1，含义是5个primary shard，5个 replica shard，共10个 shard。因此 Elasticsearch 最小的高可用配置是2台服务器。</p><figure><img src="https://javapub-common-oss.oss-cn-beijing.aliyuncs.com/javapub/2024%2F06%2F15%2F20240615-091137.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="理解倒排索引" tabindex="-1"><a class="header-anchor" href="#理解倒排索引"><span>理解倒排索引</span></a></h2><blockquote><p>例如倒排索引等内容</p></blockquote><h3 id="倒排索引相关术语" tabindex="-1"><a class="header-anchor" href="#倒排索引相关术语"><span>倒排索引相关术语</span></a></h3><p><strong>倒排索引</strong>（Inverted Index）是整个搜索的核心，倒排索引是实现“单词-文档矩阵”的一种具体存储形式，通过倒排索引，可以根据单词快速获取包含这个单词的文档列表。倒排索引主要由两个部分组成：“单词词典”和“倒排文件”。</p><p><strong>单词词典</strong>(Lexicon)：常索引单位是单词，单词词典是由文档集合中出现过的所有单词构成的字符串集合，单词词典内每条索引项记载单词本身的一些信息以及指向“倒排列表”的指针。</p><p><strong>倒排列表</strong>(PostingList)：倒排列表记载了出现过某个单词的所有文档的文档列表及单词在该文档中出现的位置信息，每条记录称为一个倒排项(Posting)。根据倒排列表，即可获知哪些文档包含某个单词。</p><p><strong>倒排文件</strong>(Inverted File)：所有单词的倒排列表往往顺序地存储在磁盘的某个文件里，这个文件即被称之为倒排文件，倒排文件是存储倒排索引的物理文件。</p><p>概念关系：</p><figure><img src="https://javapub-common-oss.oss-cn-beijing.aliyuncs.com/javapub/2024%2F06%2F15%2F20240615-091141.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="简单倒排索引实例" tabindex="-1"><a class="header-anchor" href="#简单倒排索引实例"><span>简单倒排索引实例</span></a></h3><p>倒排索引从逻辑结构和基本思路上来讲非常简单。下面我们通过具体实例来进行说明，使得大家能够对倒排索引有一个宏观而直接的感受。</p><p>假设有五个文档：</p><figure><img src="https://javapub-common-oss.oss-cn-beijing.aliyuncs.com/javapub/2024%2F06%2F15%2F20240615-091143.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>通过分词后，每个文档就转换为由单词序列构成的数据流，为了系统后续处理方便，需要对每个不同的单词赋予唯一的单词编号，同时记录下哪些文档包含这个单词，在如此处理结束后，我们可以得到最简单的倒排索引。</p><figure><img src="https://javapub-common-oss.oss-cn-beijing.aliyuncs.com/javapub/2024%2F06%2F15%2F20240615-091145.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>事实上，索引系统还可以记录除此之外的更多信息。下图是一个相对复杂些的倒排索引，与上图的基本索引系统比，在单词对应的倒排列表中不仅记录了文档编号，还记载了单词频率信息（TF），即这个单词在某个文档中的出现次数，之所以要记录这个信息，是因为词频信息在搜索结果排序时，计算查询和文档相似度是很重要的一个计算因子，所以将其记录在倒排列表中，以方便后续排序时进行分值计算。</p><figure><img src="https://javapub-common-oss.oss-cn-beijing.aliyuncs.com/javapub/2024%2F06%2F15%2F20240615-091214.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p><strong>最后</strong>，实用的倒排索引还可以记载更多的信息，上图所示索引系统除了记录文档编号和单词频率信息外，额外记载了两类信息，即每个单词对应的“文档频率信息”（以及在倒排列表中记录单词在某个文档出现的位置信息。</p><p>“文档频率信息”代表了在文档集合中有多少个文档包含某个单词，之所以要记录这个信息，其原因与单词频率信息一样，这个信息在搜索结果排序计算中是非常重要的一个因子。而单词在某个文档中出现的位置信息并非索引系统一定要记录的，在实际的索引系统里可以包含，也可以选择不包含这个信息，之所以如此，因为这个信息对于搜索系统来说并非必需的，位置信息只有在支持“短语查询”的时候才能够派上用场。</p><p>参考：https://blog.csdn.net/hguisu/article/details/7969757</p><figure><img src="https://javapub-common-oss.oss-cn-beijing.aliyuncs.com/javapub/2024%2F06%2F15%2F20240615-091217.jpeg" alt="微信搜：JavaPub" tabindex="0" loading="lazy"><figcaption>微信搜：JavaPub</figcaption></figure><p><code>在看和分享是对我最大的鼓励，我是 pub 哥，我们下期再见</code></p>`,80),l=[t];function c(p,r){return s(),e("div",null,l)}const d=a(n,[["render",c],["__file","Springboot_ElasticSearch_2.html.vue"]]),g=JSON.parse('{"path":"/posts/big_data/Elasticsearch/Springboot_ElasticSearch_2.html","title":"Springboot2.x整合ElasticSearch7.x实战（二）","lang":"zh-CN","frontmatter":{"title":"Springboot2.x整合ElasticSearch7.x实战（二）","icon":"lightbulb","author":"Wang Shiyu","date":"2022-04-21T00:00:00.000Z","category":["elasticsearch","springboot"],"tag":["elasticsearch","springboot"],"description":"本教程是系列教程，对于初学者可以对 ES 有一个整体认识和实践实战。 还没开始的同学，建议先读一下系列攻略目录：Springboot2.x整合ElasticSearch7.x实战目录 本篇幅是继上一篇 Springboot2.x整合ElasticSearch7.x实战（一） ，适合初学 Elasticsearch 的小白，可以跟着整个教程做一个练习。 ...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/posts/big_data/Elasticsearch/Springboot_ElasticSearch_2.html"}],["meta",{"property":"og:site_name","content":"JavaPub"}],["meta",{"property":"og:title","content":"Springboot2.x整合ElasticSearch7.x实战（二）"}],["meta",{"property":"og:description","content":"本教程是系列教程，对于初学者可以对 ES 有一个整体认识和实践实战。 还没开始的同学，建议先读一下系列攻略目录：Springboot2.x整合ElasticSearch7.x实战目录 本篇幅是继上一篇 Springboot2.x整合ElasticSearch7.x实战（一） ，适合初学 Elasticsearch 的小白，可以跟着整个教程做一个练习。 ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://javapub-common-oss.oss-cn-beijing.aliyuncs.com/javapub/2024%2F06%2F15%2F20240615-091134.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-07-06T13:42:36.000Z"}],["meta",{"property":"article:author","content":"Wang Shiyu"}],["meta",{"property":"article:tag","content":"elasticsearch"}],["meta",{"property":"article:tag","content":"springboot"}],["meta",{"property":"article:published_time","content":"2022-04-21T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-07-06T13:42:36.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Springboot2.x整合ElasticSearch7.x实战（二）\\",\\"image\\":[\\"https://javapub-common-oss.oss-cn-beijing.aliyuncs.com/javapub/2024%2F06%2F15%2F20240615-091134.png\\",\\"https://javapub-common-oss.oss-cn-beijing.aliyuncs.com/javapub/2024%2F06%2F15%2F20240615-091137.png\\",\\"https://javapub-common-oss.oss-cn-beijing.aliyuncs.com/javapub/2024%2F06%2F15%2F20240615-091141.png\\",\\"https://javapub-common-oss.oss-cn-beijing.aliyuncs.com/javapub/2024%2F06%2F15%2F20240615-091143.png\\",\\"https://javapub-common-oss.oss-cn-beijing.aliyuncs.com/javapub/2024%2F06%2F15%2F20240615-091145.png\\",\\"https://javapub-common-oss.oss-cn-beijing.aliyuncs.com/javapub/2024%2F06%2F15%2F20240615-091214.png\\",\\"https://javapub-common-oss.oss-cn-beijing.aliyuncs.com/javapub/2024%2F06%2F15%2F20240615-091217.jpeg\\"],\\"datePublished\\":\\"2022-04-21T00:00:00.000Z\\",\\"dateModified\\":\\"2024-07-06T13:42:36.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Wang Shiyu\\"}]}"]]},"headers":[{"level":2,"title":"ik分词器插件安装","slug":"ik分词器插件安装","link":"#ik分词器插件安装","children":[]},{"level":2,"title":"拼音分词器插件安装","slug":"拼音分词器插件安装","link":"#拼音分词器插件安装","children":[]},{"level":2,"title":"更多扩展词库","slug":"更多扩展词库","link":"#更多扩展词库","children":[]},{"level":2,"title":"Elasticsearch核心概念-相关术语解析","slug":"elasticsearch核心概念-相关术语解析","link":"#elasticsearch核心概念-相关术语解析","children":[{"level":3,"title":"Cluster","slug":"cluster","link":"#cluster","children":[]},{"level":3,"title":"Node","slug":"node","link":"#node","children":[]},{"level":3,"title":"Index","slug":"index","link":"#index","children":[]},{"level":3,"title":"Type","slug":"type","link":"#type","children":[]},{"level":3,"title":"Document","slug":"document","link":"#document","children":[]},{"level":3,"title":"Shard","slug":"shard","link":"#shard","children":[]},{"level":3,"title":"Replica","slug":"replica","link":"#replica","children":[]}]},{"level":2,"title":"理解倒排索引","slug":"理解倒排索引","link":"#理解倒排索引","children":[{"level":3,"title":"倒排索引相关术语","slug":"倒排索引相关术语","link":"#倒排索引相关术语","children":[]},{"level":3,"title":"简单倒排索引实例","slug":"简单倒排索引实例","link":"#简单倒排索引实例","children":[]}]}],"git":{"createdTime":1717658350000,"updatedTime":1720273356000,"contributors":[{"name":"wangshiyu","email":"iswangshiyu@foxmail.com","commits":2}]},"readingTime":{"minutes":7.12,"words":2135},"filePathRelative":"posts/big_data/Elasticsearch/Springboot_ElasticSearch_2.md","localizedDate":"2022年4月21日","excerpt":"<p>本教程是系列教程，对于初学者可以对 ES 有一个整体认识和实践实战。</p>\\n<p>还没开始的同学，建议先读一下系列攻略目录：<a href=\\"https://mp.weixin.qq.com/s/nSWEIfbpRf-4txJqRz60gQ\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Springboot2.x整合ElasticSearch7.x实战目录</a></p>\\n<p>本篇幅是继上一篇 <a href=\\"https://mp.weixin.qq.com/s/4azw3QycpqrprABNdo44Zg\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Springboot2.x整合ElasticSearch7.x实战（一）</a> ，适合初学 Elasticsearch 的小白，可以跟着整个教程做一个练习。</p>","autoDesc":true}');export{d as comp,g as data};
